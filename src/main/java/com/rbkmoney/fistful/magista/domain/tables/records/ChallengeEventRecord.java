/*
 * This file is generated by jOOQ.
 */
package com.rbkmoney.fistful.magista.domain.tables.records;


import com.rbkmoney.fistful.magista.domain.enums.ChallengeEventType;
import com.rbkmoney.fistful.magista.domain.enums.ChallengeResolution;
import com.rbkmoney.fistful.magista.domain.enums.ChallengeStatus;
import com.rbkmoney.fistful.magista.domain.tables.ChallengeEvent;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChallengeEventRecord extends UpdatableRecordImpl<ChallengeEventRecord> implements Record11<Long, Long, ChallengeEventType, LocalDateTime, LocalDateTime, Integer, String, String, ChallengeStatus, ChallengeResolution, LocalDateTime> {

    private static final long serialVersionUID = 1340064651;

    /**
     * Setter for <code>mst.challenge_event.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>mst.challenge_event.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mst.challenge_event.event_id</code>.
     */
    public void setEventId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>mst.challenge_event.event_id</code>.
     */
    public Long getEventId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>mst.challenge_event.event_type</code>.
     */
    public void setEventType(ChallengeEventType value) {
        set(2, value);
    }

    /**
     * Getter for <code>mst.challenge_event.event_type</code>.
     */
    public ChallengeEventType getEventType() {
        return (ChallengeEventType) get(2);
    }

    /**
     * Setter for <code>mst.challenge_event.event_created_at</code>.
     */
    public void setEventCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>mst.challenge_event.event_created_at</code>.
     */
    public LocalDateTime getEventCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>mst.challenge_event.event_occured_at</code>.
     */
    public void setEventOccuredAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>mst.challenge_event.event_occured_at</code>.
     */
    public LocalDateTime getEventOccuredAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>mst.challenge_event.sequence_id</code>.
     */
    public void setSequenceId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>mst.challenge_event.sequence_id</code>.
     */
    public Integer getSequenceId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>mst.challenge_event.identity_id</code>.
     */
    public void setIdentityId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mst.challenge_event.identity_id</code>.
     */
    public String getIdentityId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mst.challenge_event.challenge_id</code>.
     */
    public void setChallengeId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mst.challenge_event.challenge_id</code>.
     */
    public String getChallengeId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mst.challenge_event.challenge_status</code>.
     */
    public void setChallengeStatus(ChallengeStatus value) {
        set(8, value);
    }

    /**
     * Getter for <code>mst.challenge_event.challenge_status</code>.
     */
    public ChallengeStatus getChallengeStatus() {
        return (ChallengeStatus) get(8);
    }

    /**
     * Setter for <code>mst.challenge_event.challenge_resolution</code>.
     */
    public void setChallengeResolution(ChallengeResolution value) {
        set(9, value);
    }

    /**
     * Getter for <code>mst.challenge_event.challenge_resolution</code>.
     */
    public ChallengeResolution getChallengeResolution() {
        return (ChallengeResolution) get(9);
    }

    /**
     * Setter for <code>mst.challenge_event.challenge_valid_until</code>.
     */
    public void setChallengeValidUntil(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>mst.challenge_event.challenge_valid_until</code>.
     */
    public LocalDateTime getChallengeValidUntil() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, ChallengeEventType, LocalDateTime, LocalDateTime, Integer, String, String, ChallengeStatus, ChallengeResolution, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, ChallengeEventType, LocalDateTime, LocalDateTime, Integer, String, String, ChallengeStatus, ChallengeResolution, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ChallengeEvent.CHALLENGE_EVENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ChallengeEvent.CHALLENGE_EVENT.EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ChallengeEventType> field3() {
        return ChallengeEvent.CHALLENGE_EVENT.EVENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return ChallengeEvent.CHALLENGE_EVENT.EVENT_CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return ChallengeEvent.CHALLENGE_EVENT.EVENT_OCCURED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return ChallengeEvent.CHALLENGE_EVENT.SEQUENCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ChallengeEvent.CHALLENGE_EVENT.IDENTITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ChallengeEvent.CHALLENGE_EVENT.CHALLENGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ChallengeStatus> field9() {
        return ChallengeEvent.CHALLENGE_EVENT.CHALLENGE_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ChallengeResolution> field10() {
        return ChallengeEvent.CHALLENGE_EVENT.CHALLENGE_RESOLUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field11() {
        return ChallengeEvent.CHALLENGE_EVENT.CHALLENGE_VALID_UNTIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventType component3() {
        return getEventType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component4() {
        return getEventCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component5() {
        return getEventOccuredAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getSequenceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getIdentityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getChallengeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeStatus component9() {
        return getChallengeStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeResolution component10() {
        return getChallengeResolution();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component11() {
        return getChallengeValidUntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventType value3() {
        return getEventType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getEventCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getEventOccuredAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getSequenceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIdentityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getChallengeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeStatus value9() {
        return getChallengeStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeResolution value10() {
        return getChallengeResolution();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value11() {
        return getChallengeValidUntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value2(Long value) {
        setEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value3(ChallengeEventType value) {
        setEventType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value4(LocalDateTime value) {
        setEventCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value5(LocalDateTime value) {
        setEventOccuredAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value6(Integer value) {
        setSequenceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value7(String value) {
        setIdentityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value8(String value) {
        setChallengeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value9(ChallengeStatus value) {
        setChallengeStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value10(ChallengeResolution value) {
        setChallengeResolution(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord value11(LocalDateTime value) {
        setChallengeValidUntil(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChallengeEventRecord values(Long value1, Long value2, ChallengeEventType value3, LocalDateTime value4, LocalDateTime value5, Integer value6, String value7, String value8, ChallengeStatus value9, ChallengeResolution value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChallengeEventRecord
     */
    public ChallengeEventRecord() {
        super(ChallengeEvent.CHALLENGE_EVENT);
    }

    /**
     * Create a detached, initialised ChallengeEventRecord
     */
    public ChallengeEventRecord(Long id, Long eventId, ChallengeEventType eventType, LocalDateTime eventCreatedAt, LocalDateTime eventOccuredAt, Integer sequenceId, String identityId, String challengeId, ChallengeStatus challengeStatus, ChallengeResolution challengeResolution, LocalDateTime challengeValidUntil) {
        super(ChallengeEvent.CHALLENGE_EVENT);

        set(0, id);
        set(1, eventId);
        set(2, eventType);
        set(3, eventCreatedAt);
        set(4, eventOccuredAt);
        set(5, sequenceId);
        set(6, identityId);
        set(7, challengeId);
        set(8, challengeStatus);
        set(9, challengeResolution);
        set(10, challengeValidUntil);
    }
}
